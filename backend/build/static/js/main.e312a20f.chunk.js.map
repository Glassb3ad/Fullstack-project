{"version":3,"sources":["services/messageService.js","services/stockService.js","reducers/stockReducer.js","reducers/parameterReducer.js","services/userService.js","reducers/userReducer.js","reducers/notificationReducer.js","reducers/indexReducer.js","store.js","utilities/format.js","components/StockList.js","components/SearchTab.js","components/Info.js","services/indexService.js","components/Chart.js","components/Nasdaq.js","components/Screener.js","components/FollowStock.js","components/MessageForm.js","services/logoService.js","components/Logo.js","components/Price.js","components/StockChart.js","components/Stock.js","components/Login.js","components/UserPage.js","components/RegisterPage.js","components/Notification.js","components/directSearch.js","App.js","index.js"],"names":["token","addNew","message","user","a","newToken","config","headers","Authorization","axios","post","response","messageService","baseUrl","getAll","get","data","getPrice","symbol","stockService","getById","id","addLogo","stockId","logo","type","addPrice","price","stockReducer","state","action","content","stock","find","_id","commentedStock","messages","Messages","concat","newStock","newState","map","stockb","newStockb","newStateb","stockc","newStockc","newStatec","parameterReducer","parameter","userUrl","login","credentials","findById","error","newAccount","updateStocklist","Stocks","stocksId","body","followedStocks","put","userService","addUser","dispatch","unfollowStock","userReducer","newFollowedStocks","filter","addNotification","notification","addError","notificationReducer","indexReducer","history","reducer","combineReducers","stocks","parameters","index","store","createStore","composeWithDevTools","applyMiddleware","thunk","formatValue","Math","round","Number","formatParameter","formatDate","date","result","replaceAll","replace","substring","length","StockRow","props","value","firstStock","to","Name","Sector","orderStocks","descending","sort","b","isNaN","reverse","StockList","useSelector","useState","lastStock","setlastStock","setFirstStock","useEffect","orderedStocks","Table","striped","bordered","hover","size","slice","Button","variant","onClick","SearchTab","useDispatch","show","setShow","currentParameters","style","backgroundColor","maxWidth","Form","onSubmit","event","preventDefault","direction","amount","newParameters","target","Order","Show","class","Group","className","Label","as","column","sm","Col","Check","label","name","Info","background","getIndex","historical","indexService","Chart","labels","datasets","fill","lineTension","borderColor","borderWidth","close","width","height","options","title","display","text","fontSize","position","elements","point","pointStyle","radius","legend","Nasdaq100","paddingBottom","then","addIndexHistory","catch","console","log","Screener","Nasdaq","paddingTop","FollowStock","follow","followStock","username","MessageForm","visible","setVisible","comment","setComment","Message","sender","senderName","Date","toISOString","addMessage","rows","cols","onChange","variation","getLogo","stockName","logoService","Logo","alt","src","ret","Price","Object","values","setTimeout","Symbol","prices","StockChart","dates","getOwnPropertyNames","closeValues","FinancialInformation","key","entries","Stock","parameterId","useParams","financialDataOfStock","Industry","MarketCapitalization","RevenueTTM","RevenuePerShareTTM","QuarterlyRevenueGrowthYOY","GrossProfitTTM","ProfitMargin","EBITDA","EPS","DilutedEPSTTM","QuarterlyEarningsGrowthYOY","BookValue","PERatio","PEGRatio","ForwardPE","TrailingPE","PriceToBookRatio","PriceToSalesRatioTTM","ReturnOnAssetsTTM","ReturnOnEquityTTM","EVToRevenue","EVToEBITDA","Beta","DividendPerShare","DividendYield","paddingLeft","paddingRight","boxShadow","border","Description","Login","setUsername","password","setPassword","handleLogin","placeholder","FollowedStock","UserPage","acco","RegisterPage","password1","setPassword1","password2","setPassword2","handleSubmit","Notification","Alert","DirectSearch","filteredStocks","setFilteredStocks","setFilter","emptyResults","float","padding","newFilteredStocks","undefined","toLowerCase","includes","minWidth","zIndex","App","Navbar","sticky","Nav","Link","href","marginLeft","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e312a20f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/messages'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst addNew = async (message, user) => {\r\n    setToken(user.token)\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const response = await axios.post(baseUrl, message, config)\r\n    return response \r\n}\r\nconst messageService = {addNew}\r\n\r\nexport default messageService\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/stocks'\r\n\r\nconst getAll = async () => {\r\n    const response = await axios.get(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst getById = (id) => {\r\n    return axios.get(baseUrl+id)\r\n}\r\nconst getPrice = async (symbol) => {\r\n    try{\r\n        const response = await axios.get(`/api/prices/${symbol}`)\r\n        return response.data\r\n    }\r\n    catch(error){return error}\r\n}\r\nconst stockService = {\r\n    getAll,\r\n    getById,\r\n    getPrice\r\n}\r\n\r\nexport default stockService","import messageService from '../services/messageService'\r\nimport stockService from '../services/stockService' \r\n\r\nconst stockReducer = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'ADD_STOCKS':\r\n            return action.content\r\n        case 'ADD_COMMENT':\r\n            const stock = state.find(a => a._id === action.content.commentedStock)\r\n            const messages = stock.Messages.concat(action.content)\r\n            messageService.addNew(action.content, action.user)\r\n            const newStock = {...stock, Messages: messages}\r\n            const newState = state.map(a => {\r\n                if(a._id === action.content.commentedStock) return newStock\r\n                return a\r\n            }) \r\n            return newState     \r\n        case 'ADD_LOGO':\r\n            const stockb = state.find(a => a._id === action.stockId)\r\n            const newStockb = {...stockb, logo: action.logo}\r\n            const newStateb = state.map(a => {\r\n                if(a._id === newStockb._id) return newStockb\r\n                return a\r\n            })\r\n            return newStateb\r\n        case 'ADD_PRICE':\r\n            const stockc = state.find(a => a._id === action.stockId)\r\n            const newStockc = {...stockc, price: action.price}\r\n            const newStatec = state.map(a => {\r\n                if(a._id === newStockc._id) return newStockc\r\n                return a\r\n            })        \r\n            return newStatec\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initStocks = () => {\r\n    return (async (dispatch) =>{\r\n        const stocks = await stockService.getAll()\r\n        dispatch({\r\n            type: 'ADD_STOCKS',\r\n            content: stocks\r\n        })\r\n    })\r\n}\r\nexport const addMessage = (message, user) => {\r\n    return({\r\n        type: 'ADD_COMMENT',\r\n        content: message,\r\n        user: user\r\n    })\r\n}\r\nexport const addLogo = (stockId, logo) => {\r\n    return({\r\n        type: 'ADD_LOGO',\r\n        logo: logo,\r\n        stockId: stockId\r\n    })\r\n}\r\nexport const addPrice = (stockId, price) => {\r\n\r\n    return({\r\n        type: 'ADD_PRICE',\r\n        price: price,\r\n        stockId: stockId\r\n    })    \r\n} \r\n\r\nexport default stockReducer","const parameterReducer = (state = [\"MarketCapitalization\", \"UP\", \"50\"], action) => {\r\n    switch(action.type){\r\n        case 'ADD_PARAMETER':\r\n            return action.parameter\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addParameters = (parameter, direction, amount) => {\r\n    return {\r\n        type: 'ADD_PARAMETER',\r\n        parameter: [parameter, direction, amount] \r\n    }\r\n}\r\n\r\nexport default parameterReducer\r\n","import axios from 'axios'\r\nconst loginUrl = '/api/login'\r\nconst userUrl = '/api/users'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\nconst login = async credentials => {\r\n  const response = await axios.post(loginUrl, credentials)\r\n  return response.data\r\n}\r\nconst findById = async id => {\r\n  try{ \r\n    const response = await axios.get(userUrl+'/'+id)\r\n    return response.data\r\n  }\r\n  catch(error){return error.error}\r\n}\r\nconst newAccount = async (user) => {\r\n  const response = await axios.post(userUrl, user)\r\n  return response.data\r\n}\r\n\r\nconst updateStocklist = async (Stocks, user) => {\r\n  setToken(user.token)\r\n  const stocksId = Stocks.map(a => a._id)\r\n  const body = { \r\n    followedStocks: stocksId\r\n  }\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.put(userUrl + \"/\"+user.id, body, config)\r\n  return response.data\r\n}\r\n\r\nconst userService = {login, findById, newAccount, updateStocklist}\r\nexport default userService;","import userService from \"../services/userService\"\r\n\r\nconst userReducer = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'ADD_USER':\r\n            return action.parameter\r\n        case 'REMOVE':\r\n            return null\r\n        case 'ADD_STOCK':\r\n            const followedStocks = state.followedStocks.concat(action.stock)\r\n            userService.updateStocklist(followedStocks, state)\r\n            return {...state, followedStocks : followedStocks}\r\n        case 'REMOVE_STOCK':\r\n            const newFollowedStocks = state.followedStocks.filter(a => a._id !== action.stockId)\r\n            userService.updateStocklist(newFollowedStocks, state)\r\n            return {...state, followedStocks: newFollowedStocks}\r\n        default:\r\n            return state\r\n    }\r\n} \r\nexport const addUser = (a) => {\r\n    return async (dispatch) => { \r\n        const user = await userService.findById(a.id)\r\n        dispatch(\r\n        {\r\n            type: 'ADD_USER',\r\n            parameter: {...user, token : a.token} \r\n        })}\r\n}\r\nexport const removeUser = () => {\r\n    return{\r\n        type: 'REMOVE'\r\n    }\r\n}\r\n\r\nexport const followStock = (stock) => {\r\n    return{\r\n        type: 'ADD_STOCK',\r\n        stock: stock\r\n    }\r\n}\r\nexport const unfollowStock = (stockId) => {\r\n    return{\r\n        type: 'REMOVE_STOCK',\r\n        stockId: stockId\r\n    }\r\n}\r\n\r\nexport default userReducer","const notificationReducer = (state = {content : null, type : null }, action) => {\r\n    switch(action.type){\r\n        case 'ADD_NOTIFICATION':\r\n            return {content: action.content, type: 'NOTIFICATION'}\r\n        case 'ADD_ERROR':\r\n            return {content: action.content, type: 'ERROR'} \r\n        case 'RESET':\r\n            return {content : null, type : null }    \r\n        default:\r\n            return state\r\n    }   \r\n}\r\nexport const addNotification = (notification) => {\r\n    return {\r\n        type: 'ADD_NOTIFICATION',\r\n        content: notification \r\n    }\r\n}\r\nexport const addError = (error) => {\r\n    return {\r\n        type: 'ADD_ERROR',\r\n        content: error \r\n    }\r\n}\r\n\r\nexport const resetNotification = () => {\r\n    return {\r\n        type: 'RESET'\r\n    }\r\n}\r\n\r\n\r\nexport default notificationReducer","const indexReducer = (state = null, action) => {\r\n    switch(action.type){\r\n        case 'ADD_HISTORY':\r\n            return action.history\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addIndexHistory = (history) => {\r\n    return {\r\n        type: 'ADD_HISTORY',\r\n        history: history \r\n    }\r\n}\r\n\r\nexport default indexReducer","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport stockReducer from './reducers/stockReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport parameterReducer from './reducers/parameterReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport indexReducer from './reducers/indexReducer'\r\nconst reducer = combineReducers({\r\n    stocks: stockReducer,\r\n    parameters: parameterReducer,\r\n    user : userReducer,\r\n    notification: notificationReducer,\r\n    index: indexReducer\r\n})\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","export const formatValue = (stock, parameter) => {\r\n    switch(parameter){\r\n        case('MarketCapitalization'): return (Math.round((Number(stock[parameter]) / 1000000000) * 1000)/1000)\r\n        case('RevenueTTM'): return (Math.round((Number(stock[parameter]) / 1000000000) * 1000)/1000)\r\n        case('ReturnOnAssetsTTM'): return (Math.round(Number(stock[parameter]) * 10000)/100 + '%')\r\n        case('ReturnOnEquityTTM'): return (Math.round(Number(stock[parameter]) * 10000)/100 + '%')\r\n        case('DividendYield'): return (Math.round(Number(stock[parameter]) * 10000)/100 + '%')\r\n        case(\"GrossProfitTTM\"): return (Math.round((Number(stock[parameter]) / 1000000000) * 1000)/1000)\r\n        case(\"QuarterlyRevenueGrowthYOY\"): return (Math.round(Number(stock[parameter]) * 10000)/100 + '%')\r\n        case(\"QuarterlyEarningsGrowthYOY\"): return (Math.round(Number(stock[parameter]) * 10000)/100 + '%')\r\n        case('EBITDA'): return (Math.round((Number(stock[parameter]) / 1000000000) * 1000)/1000)\r\n        case('ProfitMargin'): return (Math.round(Number(stock[parameter]) * 10000)/100 + '%')\r\n        default: return stock[parameter]\r\n    }\r\n}\r\nexport const formatParameter = (parameter) => {\r\n    switch(parameter){\r\n        case('MarketCapitalization'): return 'Market capitalization (billion USD)'\r\n        case('RevenueTTM'): return ('Revenue (billion USD)')\r\n        case('PERatio'): return 'P/E'\r\n        case('PEGRatio'): return 'PEG Ratio'\r\n        case('DividendPerShare'): return 'Dividend per share'\r\n        case('ProfitMargin'): return 'Profit margin'\r\n        case('ReturnOnAssetsTTM'): return 'ROA' \r\n        case('ReturnOnEquityTTM'): return 'ROE'\r\n        case('TrailingPE'): return 'Trailing P/E'\r\n        case('ForwardPE'): return 'Forward P/E'\r\n        case('PriceToSalesRatioTTM'): return 'P/S'\r\n        case('PriceToBookRatio'): return 'P/B'\r\n        case('DividendYield'): return 'Divident yield'\r\n        case(\"QuarterlyRevenueGrowthYOY\"): return 'Quarterly revenue growth'\r\n        case('RevenuePerShareTTM'): return \"Revenue per share\"\r\n        case('GrossProfitTTM'): return \"Gross profit (billion USD)\"\r\n        case('DilutedEPSTTM'): return \"Diluted EPS\"\r\n        case('QuarterlyEarningsGrowthYOY'): return \"Quarterly earnings growth\"\r\n        case('SharesOutstanding'): return \"Shares outstanding\"\r\n        case('EVToRevenue'): return \"EV to Revenue\"\r\n        case('EVToEBITDA'): return \"EV To EBITDA\"\r\n        case('EBITDA'): return \"EBITDA (billion USD)\"\r\n        default: return parameter\r\n    }\r\n}\r\n\r\nexport const formatDate = (date) => {\r\n    const result = (\"date:\" + date).replaceAll('-','.').replace('T', ' time:')\r\n    return result.substring(0, result.length-5)\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from \"react-router-dom\"\r\nimport { formatValue, formatParameter } from \"../utilities/format\"\r\nimport { Table, Button } from \"react-bootstrap\"\r\n\r\nconst StockList = (props) => {  \r\n    const stocks =  useSelector(state => state.stocks)\r\n    const parameters = useSelector(state => state.parameters)\r\n    const [lastStock, setlastStock] = useState(Number(parameters[2]))\r\n    const [firstStock, setFirstStock] = useState(0)\r\n    useEffect(() => {\r\n        setFirstStock(0)\r\n        setlastStock(Number(parameters[2]))\r\n    },[parameters])\r\n    if(!stocks || !parameters) return (<></>)\r\n    const parameter = parameters[0]\r\n    const orderedStocks = orderStocks(stocks, parameters)\r\n    const nextPage = () => {\r\n        if(lastStock >= 99){\r\n            setFirstStock(0)\r\n            setlastStock(Number(parameters[2]))\r\n        }\r\n        else{\r\n            setFirstStock(lastStock)\r\n            setlastStock(lastStock + Number(parameters[2]))\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th>{formatParameter(parameter)}</th>\r\n                        <th>Sector</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orderedStocks.slice(firstStock,lastStock).map((stock, index) => <StockRow key={stock._id} stock = {stock} parameter = {parameter} index={index} firstStock={firstStock}/>)}\r\n                </tbody>\r\n            </Table>\r\n            <Button size=\"lg\" variant='primary' onClick = {nextPage}>show stocks {lastStock !== 100 ? lastStock : 0} - { !(lastStock + Number(parameters[2]) > 100) ? lastStock + Number(parameters[2]) : Number(parameters[2])}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StockRow = props => {\r\n    const stock = props.stock\r\n    const value = formatValue(stock, props.parameter);\r\n    return (\r\n        <tr key={stock._id}>\r\n            <td>{props.firstStock + props.index}. <Link to = {`stocks/${stock._id}`} >{stock.Name}</Link></td>\r\n            <td>{value}</td>\r\n            <td>{stock.Sector}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst orderStocks = (stocks, parameters) => {\r\n        const descending = stocks.sort((a,b) => {\r\n            if(!isNaN(Number(b[parameters[0]])) && !isNaN(Number(a[parameters[0]]))){\r\n                return Number(b[parameters[0]]) - Number(a[parameters[0]])  \r\n            }\r\n            if(isNaN(Number(b[parameters[0]]))) return -1\r\n            if(isNaN(Number(a[parameters[0]]))) return 1\r\n            return 0\r\n        })\r\n        if(parameters[1] === 'DOWN'){\r\n            return descending.reverse()\r\n        }\r\n        else return descending\r\n}\r\n\r\nexport default StockList","import { useState } from \"react\"\r\nimport { addParameters } from \"../reducers/parameterReducer\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Form, Col } from \"react-bootstrap\"\r\nconst SearchTab = () => {\r\n    const dispatch = useDispatch()\r\n    const [show, setShow] = useState(false) \r\n    const currentParameters = useSelector(state => state.parameters)\r\n    const handleSub = (event) => {\r\n        event.preventDefault()\r\n        setShow(false)\r\n        const newParameters = [].concat(currentParameters)\r\n        if(event.target.parameter.value) newParameters[0] = event.target.parameter.value\r\n        if(event.target.Order.value) newParameters[1] = event.target.Order.value\r\n        if(event.target.Show.value) newParameters[2] = event.target.Show.value\r\n        dispatch(addParameters(newParameters[0], newParameters[1], newParameters[2]))\r\n    }\r\n\r\n    if(show){\r\n        return(\r\n            <div style = {{backgroundColor: '#d3dee0', maxWidth :'500px'}}>\r\n            <Form onSubmit = {handleSub}>\r\n                <div class=\"d-inline-flex p-2 bd-highlight\">\r\n                    <div class=\"p-2 bd-highlight\">\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label as=\"legend\" column sm={2}>\r\n                        <b> Parameter</b>\r\n                        </Form.Label>\r\n                        <Col sm={10}>\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Market Capitalization\"\r\n                            name=\"parameter\"\r\n                            value=\"MarketCapitalization\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"P/E\"\r\n                            name=\"parameter\"\r\n                            value = \"PERatio\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"PEG\"\r\n                            name=\"parameter\"\r\n                            value=\"PEGRatio\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"EPS\"\r\n                            name=\"parameter\"\r\n                            value=\"EPS\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Profit margin\"\r\n                            name=\"parameter\"\r\n                            value = \"ProfitMargin\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"ROA\"\r\n                            name=\"parameter\"\r\n                            value=\"ReturnOnAssetsTTM\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Dividend per share\"\r\n                            name=\"parameter\"\r\n                            value=\"DividendPerShare\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"ROE\"\r\n                            name=\"parameter\"\r\n                            value = \"ReturnOnEquityTTM\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Revenue\"\r\n                            name=\"parameter\"\r\n                            value=\"RevenueTTM\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Trailing P/E\"\r\n                            name=\"parameter\"\r\n                            value=\"TrailingPE\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"P/S\"\r\n                            name=\"parameter\"\r\n                            value = \"PriceToSalesRatioTTM\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"P/B\"\r\n                            name=\"parameter\"\r\n                            value=\"PriceToBookRatio\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Forward P/E\"\r\n                            name=\"parameter\"\r\n                            value=\"ForwardPE\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Beta\"\r\n                            name=\"parameter\"\r\n                            value=\"Beta\"\r\n                            />\r\n                            <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Dividend Yield\"\r\n                            name=\"parameter\"                        \r\n                            value=\"DividendYield\"\r\n                            />                          \r\n                        </Col>\r\n                    </Form.Group>\r\n                    </div>\r\n                    <div class=\"p-2 bd-highlight\">\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label as=\"legend\" column sm={2}>\r\n                            <b> Order</b>\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Check\r\n                                type=\"radio\"\r\n                                label=\"High first\"\r\n                                name=\"Order\"\r\n                                value=\"UP\"\r\n                                />\r\n                                <Form.Check\r\n                                type=\"radio\"\r\n                                label=\"Low first\"\r\n                                name=\"Order\"\r\n                                value=\"DOWN\"\r\n                                />\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div class=\"p-2 bd-highlight\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label as=\"legend\" column sm={2}>\r\n                    <div class=\"d-inline-flex p-2 bd-highlight\"> <b> Show on page</b></div>\r\n                    </Form.Label>\r\n                    <Col sm={10}>\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"10\"\r\n                        name=\"Show\"\r\n                        value=\"10\"\r\n                        />\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"20\"\r\n                        name=\"Show\"\r\n                        value=\"20\"\r\n                        />\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"50\"\r\n                        name=\"Show\"\r\n                        value=\"50\"\r\n                        />\r\n                        <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"100\"\r\n                        name=\"Show\"\r\n                        value=\"100\"\r\n                        />                        \r\n                    </Col>\r\n                </Form.Group>\r\n                </div>\r\n                </div>\r\n                <div>\r\n                <Button variant=\"primary\" type=\"submit\">Search</Button>\r\n                <Button variant=\"secondary\" onClick={() => {setShow(false)}}>Close</Button>\r\n                </div>\r\n            </Form>\r\n            </div>\r\n        )\r\n    }\r\n    else return(<Button size=\"lg\" variant = 'primary' onClick={() => {setShow(true)}}>Adjust screener</Button>)\r\n}\r\n\r\nexport default SearchTab","const Info = () =>\r\n{\r\n    return(\r\n        <div class=\"w-100 p-3\" style={{background: \"rgb(226, 227, 228)\"}}>\r\n            <h3>Meaning of key figures</h3>\r\n                <div>\r\n                    <b>Market capitalization: </b>\r\n                    Total amount of shares multiplied by the share price\r\n                </div>\r\n                <div>\r\n                    <b>EBITDA: </b>\r\n                    Earnings before interest, taxes, depreciation, and amortization. Broadly this means revenue minus operating expenses.\r\n                </div>\r\n                <div>\r\n                    <b>Revenue: </b>\r\n                    The total amount of income company has generated from its primary operations. Here revenue is from the trailing twelwe months. \r\n                </div>\r\n                <div>\r\n                    <b>EPS: </b>\r\n                    Earnings per share.   \r\n                </div>\r\n                <div>\r\n                    <b>Book value: </b>\r\n                    The total net value of company's assets per share.   \r\n                </div>\r\n                <div>\r\n                    <b>P/E: </b>\r\n                    Share price divided by EPS.   \r\n                </div>\r\n                <div>\r\n                    <b>PEG: </b>\r\n                    The price/earnings to growth ratio. P/E divided by the growth rate of company's earnings.   \r\n                </div>\r\n                <div>\r\n                    <b>Trailing P/E: </b>\r\n                       Share price divided by EPS during trailing 12 months.\r\n                </div>\r\n                <div>\r\n                    <b>Forward P/E: </b>\r\n                       Current share price divided by the estimated futures earnings.\r\n                </div>\r\n                <div>\r\n                    <b>P/B: </b>\r\n                       Share price divided by the book value per share.\r\n                </div>\r\n                <div>\r\n                    <b>P/S: </b>\r\n                    Market capitalization divided by the revenue.                       \r\n                </div>\r\n                <div>\r\n                    <b>ROA: </b>\r\n                    Return on assets. Informs how much income company produces relative to its total assets.  \r\n                </div>\r\n                <div>\r\n                    <b>ROE: </b>\r\n                    Return on equity. Net profit divided by shareholders equity investend in company. Indicates how profitable the company is for the investors.  \r\n                </div>\r\n                <div>\r\n                    <b>Profit margin: </b>\r\n                    Percentage of sales that is turned into profits. Indicates how profitable the company is.  \r\n                </div>\r\n                <div>\r\n                    <b>EV to revenue: </b>\r\n                    Enterprise value divided by the revenue.  \r\n                </div>\r\n                <div>\r\n                    <b>EV To EBITDA: </b>\r\n                    Enterprise value divided by EBITDA.  \r\n                </div>\r\n                <div>\r\n                    <b>Beta: </b>\r\n                    Informs how volatile the stock is relative to the entire market.  \r\n                </div>\r\n                <div>\r\n                    <b>Gross profit: </b>\r\n                    Revenue minus the cost of producing services or products that have generated the sales.  \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info","import axios from 'axios'\r\nconst basicUrl = '/api/index'\r\n\r\nconst getIndex = async () => {\r\n    try{\r\n        const response = await axios.get(basicUrl)\r\n        return response.data.historical\r\n    }\r\n    catch(error){return null}\r\n}\r\nconst indexService = {getIndex}\r\nexport default indexService","import {Line} from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Chart1 } from 'react-chartjs-2'\r\n\r\n\r\nconst Chart = ({history}) => {\r\n    if(!history) return <></>\r\n    const dates = (history.map(a => a.date)).reverse()\r\n    const closeValues = (history.map(a => Math.round((a.close * 100))/100)).reverse()\r\n    const state = {\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"points\",\r\n            fill: true,\r\n            lineTension: 0.5,\r\n            \r\n            backgroundColor: 'rgba(75,192,192,1)',\r\n            borderColor: 'rgba(0,0,0,1)',\r\n            borderWidth: 0.5,\r\n            data: closeValues\r\n          }\r\n        ]\r\n      }\r\n    return (\r\n        <div style={{width:\"80%\", height:\"80%\"}}>\r\n        <Line\r\n        data={state}\r\n        options={{\r\n          title:{\r\n            display:true,\r\n            text:'Nasdaq 100',\r\n            fontSize:20,\r\n            position: 'top'\r\n          },\r\n          elements: {\r\n              point:{\r\n                  pointStyle : 'rect',\r\n                  radius : 1\r\n              }\r\n          },\r\n          legend:{\r\n            display:true,\r\n            position:'right'\r\n          }\r\n        }}\r\n      />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Chart","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { addIndexHistory } from \"../reducers/indexReducer\"\r\nimport indexService from \"../services/indexService\"\r\nimport Chart from \"./Chart\"\r\n\r\nconst Nasdaq100 = (props) => {\r\n    const dispatch = useDispatch()\r\n    const index = useSelector(state => state.index)\r\n    if(index){\r\n        return(\r\n            <div>\r\n                <h1>Nasdaq 100 Index</h1>\r\n                <div style={{paddingBottom : \"30px\"}}>\r\n                    <b>Basic info: </b> Nasdaq 100  is a stock market index that contains 100 largest non-financial (for example insurance companies are excluded) companies from Nasdaq stock. \r\n                    Many of the lagrest companies in the world, like Alphabet or Amazon.com, can be found from Nasdaq100. Index notoriously contains high amount of big tech companies and it's therefore also known as US-tech 100. \r\n                    This application offers you ability to screen all nasdaq 100 stocks with familair key figures like P/E or ROE. In addition, you can sign up and discuss of a particular stock with other users.\r\n                    Signing up also allows you to follow your favorite stocks so that you can always retrieve their up-to-date information quickly\r\n                </div>\r\n                <h2>History</h2>\r\n                {index ? <Chart history={index}/> : <></>}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        indexService.getIndex().then((history) => {\r\n            dispatch(addIndexHistory(history))    \r\n        }).catch(error => {console.log(error)})\r\n    }\r\n    return(\r\n        <div>\r\n            <h2>Nasdaq 100 Index</h2>\r\n            <div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nasdaq100","import StockList from \"./StockList\"\r\nimport SearchTab from \"./SearchTab\"\r\nimport Info from \"./Info\"\r\nimport Nasdaq100 from \"./Nasdaq\"\r\nconst Screener = (props) => {\r\n    return(\r\n        <div>\r\n            <Nasdaq100/>\r\n            <div    style = {{paddingTop: '40px', backgroundColor: '#fafeff'}}>\r\n                <h1>Stock Screener</h1>\r\n                <div style = {{paddingTop: '20px', paddingBottom: '20px'}}>\r\n                    <SearchTab/>\r\n                </div>\r\n                <StockList/>\r\n            </div>\r\n            <footer style = {{paddingTop: '20px', paddingBottom: '20px'}}>\r\n                <Info/>\r\n            </footer>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default Screener","import { useSelector, useDispatch } from \"react-redux\"\r\nimport { followStock, unfollowStock } from \"../reducers/userReducer\"\r\nimport { addNotification } from \"../reducers/notificationReducer\"\r\nimport { Button } from \"react-bootstrap\"\r\nconst FollowStock = (props) => {\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const stock = props.stock\r\n    const follow = () => {\r\n        dispatch(followStock(stock))\r\n        dispatch(addNotification(`${user.username} follows ${stock.Name}`))\r\n    }\r\n    const unfollow = () => {\r\n        dispatch(unfollowStock(stock._id))\r\n        dispatch(addNotification(`${user.username} unfollows ${stock.Name}`))\r\n    }\r\n    if(!user) return (<></>)\r\n    if(!user.followedStocks) return(<button onClick = {follow}>Follow</button>)\r\n    if(user.followedStocks.find(a => a._id === stock._id)){\r\n        return(<Button variant='primary' size='lg' onClick = {unfollow}>Unfollow</Button>)\r\n    }\r\n    else return (<Button variant='primary' size='lg' onClick = {follow}>Follow</Button>)\r\n}\r\n\r\nexport default FollowStock","import { useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { addMessage } from \"../reducers/stockReducer\"\r\nimport { Button, Form } from \"react-bootstrap\"\r\n\r\nconst MessageForm = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const [comment, setComment] = useState(\"\")\r\n    const user = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const handleComment = (event) => {\r\n        event.preventDefault()\r\n        const Message = {\r\n            commentedStock : props.stock._id,\r\n            sender : user.id,\r\n            senderName : user.username,\r\n            content: comment,\r\n            date: (new Date()).toISOString()\r\n        }\r\n        dispatch(addMessage(Message, user));\r\n        setComment(\"\")\r\n        setVisible(false);\r\n    }\r\n    //User must be logged in to send message\r\n    if(!user) return (<></>)\r\n    //Button that opens form\r\n    if(!visible) return (\r\n        <div style={{paddingBottom:'20px'}}>\r\n        <Button variation='primary' size=\"lg\" onClick = {() => setVisible(true)}>comment</Button>\r\n        </div>\r\n    )\r\n    //form that allows user to leave comments avout the stock at hand\r\n    return(\r\n        <div style={{paddingBottom:'20px'}}>\r\n        <Form onSubmit={handleComment}>\r\n            <Form.Label><b>Message</b></Form.Label> <Form.Group className=\"mb-3\"> \r\n            <textarea type='text'  rows=\"4\" cols=\"50\" value={comment} onChange={(event) =>{setComment(event.target.value)}}/>\r\n            </Form.Group>\r\n            <Button variant='primary' type=\"submit\">send</Button>\r\n            <Button variant='secondary' onClick ={() => {setVisible(false); setComment(\"\")}}>cancel</Button>\r\n        </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageForm","import axios from 'axios'\r\nconst baseUrl = '/api/logos'\r\n\r\nconst getLogo =  async (stockName) => {\r\n    try{\r\n        const response = await axios.get(`${baseUrl}/${stockName}`)\r\n        return response\r\n    }\r\n    catch(error){\r\n        throw error\r\n    }\r\n}\r\n\r\nconst logoService = {getLogo}\r\n\r\nexport default logoService","import { useDispatch } from \"react-redux\"\r\nimport logoService from \"../services/logoService\"\r\nimport { addLogo } from \"../reducers/stockReducer\"\r\nconst Logo = (props) => {\r\n    const dispatch = useDispatch()\r\n    const stock = props.stock\r\n    if(!stock || stock.logo === 'noLogoAvailable') return (<></>)\r\n    if(stock.logo){\r\n        return (<div style = {{paddingBottom : \"30px\"}}><img alt=\"logo\" src={stock.logo}/></div>) \r\n    }\r\n    logoService.getLogo(stock.Name)\r\n        .then(ret => {\r\n            if(ret.data.logo) dispatch(addLogo(stock._id, ret.data.logo))\r\n            else {dispatch(addLogo(stock._id, \"noLogoAvailable\"))}\r\n        })\r\n        .catch(error => {console.log(error)})\r\n    return <></>\r\n}\r\n\r\nexport default Logo","import { useDispatch } from \"react-redux\"\r\nimport stockService from \"../services/stockService\"\r\nimport { addPrice } from \"../reducers/stockReducer\"\r\nimport { useEffect } from \"react\"\r\nconst Price = ({stock}) => {\r\n    const dispatch = useDispatch()\r\n    //Searches for a stock price data if stock.price changes\r\n    useEffect(() => {\r\n        if(stock.price){\r\n            try{\r\n                 Object.values(stock.price[\"Time Series (Daily)\"])\r\n            }\r\n            catch(error){\r\n                setTimeout(() => {\r\n                    stockService.getPrice(stock.Symbol).then((result) => {\r\n                        dispatch(addPrice(stock._id, result))\r\n                    }).catch(error => {\r\n                        dispatch(addPrice(stock._id, \"NoPrice\"))\r\n                    })\r\n                }, 120000)\r\n            }\r\n        }\r\n        else{\r\n            stockService.getPrice(stock.Symbol).then((result) => {\r\n                dispatch(addPrice(stock._id, result))\r\n            }).catch(error => {\r\n                dispatch(addPrice(stock._id, \"NoPrice\"))\r\n            })\r\n        }\r\n    }, [stock.price, dispatch, stock.Symbol, stock._id])\r\n\r\n    if(stock.price){\r\n        try{\r\n            const prices =  Object.values(stock.price[\"Time Series (Daily)\"])\r\n            return (<div style={{fontSize: '20'}}>{prices[0][\"4. close\"]}$</div>)\r\n        }\r\n        catch(error){\r\n            return(<>Not available</>)\r\n        }\r\n    }\r\n    return <></>\r\n}\r\nexport default Price\r\n\r\n","import {Line} from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nconst StockChart = ({stock}) => {\r\n    if(!stock.price){\r\n        return <></>\r\n    }\r\n    if(stock.price === \"NoPrice\"){\r\n        return <></>\r\n    }\r\n    try{\r\n      const dates = Object.getOwnPropertyNames(stock.price[\"Time Series (Daily)\"]).reverse()\r\n      const closeValues = dates.map(a => stock.price[\"Time Series (Daily)\"][a][\"4. close\"])\r\n      const state = {\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: \"price\",\r\n              fill: true,\r\n              lineTension: 0.5,\r\n              \r\n              backgroundColor: 'rgba(75,192,192,1)',\r\n              borderColor: 'rgba(0,0,0,1)',\r\n              borderWidth: 0.5,\r\n              data: closeValues\r\n            }\r\n          ]\r\n      }\r\n      return (\r\n          <div style={{paddingTop: \"20px\", width:\"80%\", height:\"80%\"}}>\r\n          <h2>History</h2>\r\n          <Line\r\n          data={state}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:'Nasdaq 100',\r\n              fontSize:20,\r\n              position: 'top'\r\n            },\r\n            elements: {\r\n                point:{\r\n                    pointStyle : 'rect',\r\n                    radius : 1\r\n                }\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'right'\r\n            }\r\n          }}\r\n        />\r\n        </div>\r\n      )\r\n  }\r\n  catch(error){\r\n    console.log(error)\r\n    return <div>No price data received yet</div>\r\n  }\r\n}\r\n \r\n\r\nexport default StockChart","import { useSelector } from 'react-redux'\r\nimport {useParams} from \"react-router-dom\"\r\nimport FollowStock from './FollowStock'\r\nimport MessageForm from './MessageForm'\r\nimport { formatValue, formatParameter, formatDate } from '../utilities/format'\r\nimport Info from './Info'\r\nimport Logo from './Logo'\r\nimport Price from './Price'\r\nimport StockChart from './StockChart'\r\nimport { Table } from 'react-bootstrap'\r\nconst Stock = () => {\r\n    let parameterId = useParams().id\r\n    const stocks = useSelector(state => state.stocks)\r\n    if(!stocks) return (<></>)\r\n    const stock = stocks.find(a => {\r\n        return a._id === parameterId})\r\n    \r\n    // This object is used to reder all relevant financial data and ignore the rest. \r\n    const financialDataOfStock = {\r\n        Sector: stock.Sector,\r\n        Industry: stock.Industry,\r\n        MarketCapitalization: stock.MarketCapitalization,\r\n        RevenueTTM : stock.RevenueTTM,\r\n        RevenuePerShareTTM: stock.RevenuePerShareTTM,\r\n        QuarterlyRevenueGrowthYOY: stock.QuarterlyRevenueGrowthYOY,\r\n        GrossProfitTTM: stock.GrossProfitTTM,\r\n        ProfitMargin: stock.ProfitMargin,\r\n        EBITDA: stock.EBITDA,\r\n        EPS: stock.EPS,\r\n        DilutedEPSTTM: stock.DilutedEPSTTM,\r\n        QuarterlyEarningsGrowthYOY: stock.QuarterlyEarningsGrowthYOY,\r\n        BookValue: stock.BookValue,\r\n        PERatio: stock.PERatio,\r\n        PEGRatio: stock.PEGRatio,\r\n        ForwardPE: stock.ForwardPE,\r\n        TrailingPE: stock.TrailingPE,\r\n        PriceToBookRatio: stock.PriceToBookRatio,\r\n        PriceToSalesRatioTTM: stock.PriceToSalesRatioTTM,\r\n        ReturnOnAssetsTTM: stock.ReturnOnAssetsTTM,\r\n        ReturnOnEquityTTM: stock.ReturnOnEquityTTM,\r\n        EVToRevenue: stock.EVToRevenue,\r\n        EVToEBITDA: stock.EVToEBITDA,\r\n        Beta: stock.Beta,\r\n        DividendPerShare: stock.DividendPerShare,\r\n        DividendYield: stock.DividendYield\r\n    }  \r\n    \r\n    return(\r\n        <div style = {{paddingTop: '30px', paddingLeft: '80px', paddingRight : '50px', backgroundColor: '#fafeff', boxShadow: \"5px 10px #888888\"}}>\r\n            <Logo stock={stock}/>\r\n            <h1 style={{border: '4px solid', paddingBottom : \"10px\"}}>{stock.Name} </h1>\r\n            <div style={{ paddingTop: '5px'}}><FollowStock stock={stock}/></div>\r\n            <StockChart stock = {stock}/>\r\n            <div style={{ paddingTop: '20px', paddingBottom:\"20px\"}}>\r\n                <h4>Last price:</h4>\r\n                <Price stock={stock}/>\r\n            </div>            \r\n            <h2>Description</h2>\r\n            <p>{stock.Description}</p>\r\n            <h2>Financial information</h2>\r\n            <FinancialInformation data={financialDataOfStock}/>\r\n            <h2>Discussion</h2>\r\n            <Messages stock = {stock}/>\r\n            <MessageForm stock = {stock}/>\r\n            <footer>\r\n                <Info/>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\n//This component renders all financial information in a table.\r\nconst FinancialInformation = ({data}) => {\r\n    let key = 1;\r\n    return (\r\n        <Table striped size='sm'>\r\n            <tbody>\r\n            {Object.entries(data).map(a =>{\r\n                key++;\r\n                return(\r\n                    <tr key={key}>\r\n                        <th>{formatParameter(a[0])}</th>\r\n                        <td>{formatValue(data, a[0])}</td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\n//This component helps Stock component to render messages\r\nconst Messages = ({stock}) => {\r\n    if(!stock.Messages || stock.Messages.length === 0) {\r\n        return (\r\n            <div>\r\n                No discussion yet. add a new message. \r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n        <div>\r\n        {stock.Messages.map((a) => {\r\n            return(\r\n                <div key={a.id} style={{ backgroundColor:'#f0e5dd' }}>\r\n                    <p style={{ backgroundColor:'#dbcabd' }}> user <b>{a.senderName}</b> {formatDate(a.date)} </p>\r\n                    <p>{a.content}</p>\r\n                </div>\r\n            )\r\n        })}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Stock","import { useState } from \"react\"\r\nimport userService from \"../services/userService\"\r\nimport { addUser, removeUser } from \"../reducers/userReducer\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { addNotification, addError } from \"../reducers/notificationReducer\"\r\nimport { Button, Form } from \"react-bootstrap\"\r\nconst Login = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [visible, setVisible] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state.user)\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try{\r\n            const user = await userService.login({username, password})\r\n            dispatch(addUser(user))\r\n            dispatch(addNotification(`Logged in as ${user.username} `))\r\n            setVisible(false)\r\n        }\r\n        catch(error){dispatch(addError(\"Username or password is invalid\"))}\r\n        setPassword('')\r\n        setUsername('')\r\n    }\r\n    \r\n    //if user is logged in, show logOut -button\r\n    if(user){\r\n        return(\r\n            <Button variant='primary' onClick = {() => {dispatch(removeUser()); dispatch(addNotification(`${user.username} has logged out`))}}>logOut</Button>\r\n        )\r\n    }\r\n    //Shows login -button if no user is logged in and login -button is not pressed yet\r\n    if(!visible){\r\n        return (\r\n            <div>\r\n                <Button variant='primary'  onClick={() =>{setVisible(true)}}>Login</Button>\r\n            </div>\r\n        )\r\n    }\r\n    //After login -button is pressed, show login form\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleLogin} class=\"form-inline\">\r\n            <div class=\"d-flex flex-row bd-highlight mb-3\">\r\n                <Button type=\"submit\" variant='primary'>login</Button>\r\n                <Button variant='secondary' onClick={() =>{setVisible(false)}}>cancel</Button>\r\n                    <div class=\"p-2 bd-highlight\">\r\n                        <input type='text' value = {username} placeholder=\"username\" onChange ={(event) => setUsername(event.target.value)}/>\r\n                    </div>\r\n                    <div class=\"p-2 bd-highlight\">\r\n                        <input type='password' value = {password} placeholder=\"password\" onChange ={(event) => setPassword(event.target.value)}/>\r\n                    </div>\r\n            </div>    \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { Link } from \"react-router-dom\"\r\nimport {useDispatch } from \"react-redux\"\r\nimport { unfollowStock } from \"../reducers/userReducer\"\r\nconst FollowedStock = ({stock}) => {\r\n    const dispatch = useDispatch()\r\n    const unfollow = () => {\r\n        dispatch(unfollowStock(stock._id))\r\n    }\r\n    return(\r\n        <li>\r\n            <Link to={`/stocks/${stock._id}`}>{stock.Name}</Link> <button onClick={unfollow}>unfollow</button>\r\n        </li>\r\n    )\r\n} \r\n\r\nconst UserPage = (props) => {\r\n    const user = props.acco\r\n    if(!user) return (<div></div>)\r\n    return (\r\n        <div style = {{paddingTop: '30px', paddingLeft: '80px', paddingRight : '50px', backgroundColor: '#fafeff'}}>\r\n            <h1>{user.username}</h1>\r\n            <h2>Followed Stocks</h2>\r\n            <ul>\r\n                {user.followedStocks.map((a) => <FollowedStock key={a._id} stock ={a}/>)}\r\n            </ul>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default UserPage","import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport userService from \"../services/userService\"\r\nimport { addNotification, addError } from \"../reducers/notificationReducer\"\r\nimport { Form, Button } from \"react-bootstrap\"\r\nconst RegisterPage = (props) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password1, setPassword1] = useState('')\r\n    const [password2, setPassword2] = useState('')\r\n    const dispatch = useDispatch()\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        if(password1 === password2){\r\n            try{\r\n                await userService.newAccount({username: username, password: password1})\r\n                dispatch(addNotification(`New account ${username} created. Use username and password to login`))\r\n                setUsername(\"\")\r\n                setPassword1(\"\")\r\n                setPassword2(\"\")\r\n            }\r\n            catch(error){\r\n                dispatch(addError(\"Username is already taken\"))\r\n            }\r\n            setUsername(\"\")\r\n            setPassword1(\"\")\r\n            setPassword2(\"\")          \r\n        }\r\n        else{\r\n            dispatch(addError(\"Passwords do not match\"))\r\n            setPassword1(\"\")\r\n            setPassword2(\"\")\r\n        }\r\n    }\r\n\r\n    return(\r\n       <div style={{paddingLeft:'80px'}}> \r\n            <h1>Register a new account</h1>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Label><b>Username</b></Form.Label>\r\n                <div> <input type='text' value={username} onChange={(event)=>{setUsername(event.target.value)}}/></div>\r\n                <Form.Label><b>password</b></Form.Label>\r\n                <div> <input type='password' value={password1} onChange={(event)=>{setPassword1(event.target.value)}}/></div>\r\n                <Form.Label><b>Password</b></Form.Label>\r\n                <div><input type='password' value={password2} onChange={(event)=>{setPassword2(event.target.value)}}/></div>\r\n                <Button variant='primary' type=\"submit\">register</Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage","import { useSelector, useDispatch } from \"react-redux\"\r\nimport { resetNotification } from \"../reducers/notificationReducer\"\r\nimport { Alert } from \"react-bootstrap\"\r\nconst Notification = (props) => {\r\n    const dispatch = useDispatch()\r\n    const notification = useSelector(state => state.notification)\r\n    if(notification.type === null) return (<></>)\r\n    setTimeout(() => {\r\n        dispatch(resetNotification())\r\n    }, 5000)\r\n    if(notification.type === 'NOTIFICATION'){\r\n        return(\r\n            <Alert variant='success'>\r\n                {notification.content}\r\n            </Alert>\r\n        )\r\n    }\r\n    if(notification.type === 'ERROR'){\r\n        return(\r\n            <Alert variant='danger'>\r\n                Error: {notification.content}\r\n            </Alert>\r\n        )\r\n    }\r\n}\r\nexport default Notification","import { useSelector } from 'react-redux'\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst DirectSearch = (props) => {\r\n    const stocks = useSelector(state => state.stocks)\r\n    const [filteredStocks, setFilteredStocks] = useState([])\r\n    const [filter, setFilter] = useState(\"\")\r\n    \r\n    //This function handles search\r\n    const Filt = (event) =>  {\r\n        setFilter(event.target.value)\r\n        if(event.target.value === \"\") setFilteredStocks([])\r\n        else{\r\n            const newFilteredStocks = stocks\r\n                .filter(a => {\r\n                if(a.Name === undefined) return false\r\n                return (a.Name.toLowerCase().includes(event.target.value.toLowerCase())) \r\n                })\r\n                .sort((a,b) => {\r\n                    if(a.Name === undefined) return -1;\r\n                    if( b.Name === undefined) return 1;\r\n                    if(a.Name.toLowerCase() === b.Name.toLowerCase()) return 0;\r\n                    if(a.Name.toLowerCase() > b.Name.toLowerCase()) return 1\r\n                    else return -1\r\n                })\r\n            setFilteredStocks(newFilteredStocks)\r\n        }\r\n    }\r\n    //This function is used to disable search effects when you click any search result \r\n    const emptyResults = () => {\r\n        setFilter(\"\")\r\n        setFilteredStocks([])\r\n    }\r\n\r\n    return (\r\n        <div class=\"dropdown\" style={{float:'left', padding: '10px' }}>\r\n            <div class=\"dropdown-content\" >\r\n                <input  class=\"dropdown-item\" value={filter} onChange={Filt} type=\"search\" placeholder=\"Search\" aria-label=\"Search\" style={{backgroundColor : 'white'}}></input>\r\n                <div style={{ position: 'absolute', backgroundColor: '#f9f9f9', minWidth: '230px', zIndex: '1', border: '1px solid'}}>\r\n                {filteredStocks.slice(0,5).map(a =>{\r\n                    return(<Link class=\"dropdown-item\" style={{backgroundColor : 'white'}} to = {`/stocks/${a._id}`} onClick = {emptyResults}>{a.Name}</Link>)\r\n                })}\r\n                </div>          \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DirectSearch","import React, {useEffect} from 'react'\nimport { initStocks } from './reducers/stockReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Screener from './components/Screener'\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\"\nimport Stock from './components/Stock'\nimport Login from './components/Login'\nimport UserPage from './components/UserPage'\nimport RegisterPage from './components/RegisterPage'\nimport Notification from './components/Notification'\nimport DirectSearch from './components/directSearch'\nimport { Navbar, Nav } from 'react-bootstrap'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  //At start we fetch relevant stock data from server and put them into reudx storage\n  useEffect(() => {\n    dispatch(initStocks())\n  }, [dispatch], 0)\n  let user = useSelector(state => state.user)\n  if(!user) user = null\n  if(useSelector(state => state.stocks) == null) return (<></>)\n  return(\n      <Router>\n      <Navbar sticky='top' variant='dark'  style ={{backgroundColor :'#2a282b'}} >\n          <div class=\"d-flex flex-row bd-highlight mb-3\">    \n              <Nav.Link href=\"#\" as=\"span\">\n              <Link class=\"navbar-brand\" to='/'>Stocks  </Link>    \n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n              {user \n                ? <Link class=\"navbar-brand\" to='/user'>{user.username} </Link>\n                : <Link class=\"navbar-brand\" to=\"/register\">sign up</Link>\n              }\n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n              <Login class=\"navbar-brand\"/>\n              </Nav.Link>\n          </div>\n          <div style={{marginLeft: 'auto'}}>\n              <DirectSearch class=\"navbar-brand\"/>\n          </div>\n      </Navbar>\n      <Notification/> \n      <Switch>\n          <Route path=\"/stocks/:id\">\n            <Stock/>\n          </Route>\n          <Route path='/user'>\n            <UserPage acco = {user}/>\n          </Route>\n          <Route path=\"/register\">\n            <RegisterPage/>\n          </Route>\n          <Route path='/'>\n            <div style = {{paddingTop: '30px', paddingLeft: '80px', paddingRight : '50px', backgroundColor: '#fafeff'}}><Screener /></div>\n          </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store' \nimport App from './App'\n\nReactDOM.render(\n  <div>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </div>,\n  document.getElementById('root')\n)"],"sourceRoot":""}